name: Deploy Web Java - GitOps

on: 
  workflow_dispatch:
    inputs:
      ACRNAME:
        description: 'The Name of the ACR resource'
        required: true
        type: string
      ENVIRONMENT:
        description: 'A GitHub Environment to pull action secrets from'
        required: true
        type: environment

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: write

jobs:
  BuildPush:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - name: Get application code from repo
        uses: actions/checkout@v2
      
      - name: Log into Azure subscription
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          #subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Connect to Azure Container Registry (ACR)
        id: acrconnect
        run: |
          echo "Retrieving access token from ${{ inputs.ACRNAME }}"
          TOKEN=$(az acr login -n ${{ inputs.ACRNAME }} --expose-token)

          if [ -z "$TOKEN" ]; then
            echo "ACR Token was not retrieved successfully"
            exit 1
          fi

          ACRTOKEN=$(echo $TOKEN | jq -r ".accessToken")
          LOGINSERVER=$(echo $TOKEN | jq -r ".loginServer")

          echo "ACR Login Server: $LOGINSERVER"
          echo "::set-output name=loginServer::$LOGINSERVER"

          echo "Passing token as stdin to docker login"
          echo $ACRTOKEN | docker login $LOGINSERVER -u 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Build and push app image
        run: |
          cd "src"
          docker build . -t ${{ inputs.ACRNAME }}.azurecr.io/app:${{ github.run_number }}
          docker push ${{ inputs.ACRNAME }}.azurecr.io/app:${{ github.run_number }}

  Update-K8s-Manifests:
    name: Update K8s Deployment Manifest with Image Version
    needs: BuildPush
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Azure PowerShell Login
        uses: azure/powershell@v1
        with:
          azPSVersion: 'latest'
          inlineScript: |
            $line = Get-Content src/deployment.yaml | Select-String image: | Select-Object -ExpandProperty Line
            $content = Get-Content src/deployment.yaml
            $content | ForEach-Object {$_ -replace $line,"        image: ${{ inputs.ACRNAME }}.azurecr.io/app:${{ github.run_number }}"} | Set-Content src/deployment.yaml
      
      - name: Commit changes in manifest to repo
        run: | 
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/deployment.yaml
          git commit -m "Update image version in K8s Deployment manifests file"
          git push origin
